---

---

<div class="container">
  <div class="wrapper">
    <label for="number"> Enter a number:</label>
    <input type="number" id="number" name="number" class="bg-white-50" />
    <button id="check-number" class="btn">Check</button>

    <div id="result"></div>
  </div>
</div>
<style>
  .container {
    background-color: #f8bbd0;
    color: #000;
    border-radius: 50px;
  }

  .wrapper {
    padding: 1.5em;
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  #result {
    border: 3px solid #000;
    padding: 2em;
    margin-top: 1em;
  }
</style>
<script>
  /* 
If a prime is still prime when you reverse the digits 
and it is a different prime, then it is an emirp.
https://en.wikipedia.org/wiki/Emirp
The sequence begins with 13 and 2,3,5,7,11 
should not return as emirp because they are palindromes. 
*/

  const inputNumber = document.getElementById("number") as HTMLInputElement;
  const checkBtn = document.getElementById("check-number");
  const result = document.getElementById("result");

  function isPrime(num: number) {
    /* Starts at 2 because all numbers are divisible by 1. 
          It runs until i <  num because all primes are 
          divisible by themselves. */
    for (let i = 2; i < num; i++) {
      /*if the number is divisible by any number 
          other than itself  and one it is not prime */
      if (num % i === 0) {
        return false;
      }
    }
    /*  0 and 1 are not prime */
    return num > 1;
  }

  function isEmirp(num: number) {
    const reversePrime = parseInt(num.toString().split("").reverse().join(""));

    if (!isPrime(num)) {
      if (result) {
        result.innerText = `${num} is not a prime.`;
      }
    } else if (isPrime(reversePrime) && reversePrime !== num) {
      if (result) {
        result.innerText = `${num} is an emirp (reverse is ${reversePrime}).`;
      }
    } else {
      if (result) {
        result.innerText = `${num} is prime but not an emirp.`;
      }
    }
  }
  checkBtn?.addEventListener("click", () => {
    const num = parseInt(inputNumber.value, 10);
    if (!isNaN(num)) {
      isEmirp(num);
    } else {
      if (result) {
        result.innerText = "Please enter a valid number.";
      }
    }
  });
</script>
