---
import type { MarkdownHeading } from "astro";
type Props = {
  headings: MarkdownHeading[];
};
type HeadingWithSubheadings = MarkdownHeading & {
  subheadings: MarkdownHeading[];
};
const { headings } = Astro.props;
const grouppedHeadings = headings.reduce((array, heading) => {
  if (heading.depth === 2) {
    array.push({ ...heading, subheadings: [] });
  } else if (heading.depth === 3) {
    array.at(-1)?.subheadings.push(heading);
  }
  return array;
}, [] as HeadingWithSubheadings[]);
---

<nav id="table-of-contents" aria-label="Table Of Contents">
  <ul>
    {
      grouppedHeadings.map((h) => (
        <li>
          <a href={`#${h.slug}`}>{h.text}</a>
          {h.subheadings.length > 0 && (
            <ul>
              {h.subheadings.map((sub) => (
                <li>
                  <a href={`#${sub.slug}`}>{sub.text}</a>
                </li>
              ))}
            </ul>
          )}
        </li>
      ))
    }
  </ul>
</nav>

<style is:global>
  @media (prefers-color-scheme: dark) {
    .mobile-toc a {
      text-decoration: underline;
      color: #0d47a1;
    }

    .mobile-toc a:hover,
    .mobile-toc a:visited {
      color: #880e4f;
    }
  }
</style>
